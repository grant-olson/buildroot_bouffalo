From cf4cb62e21b2d3bd0964636128ca5d1ebe78e129 Mon Sep 17 00:00:00 2001
From: "Grant T. Olson" <kgo@grant-olson.net>
Date: Tue, 7 Feb 2023 14:33:15 -0500
Subject: [PATCH 3/4] Checkpoint MVP code that allows fotg210 driver to load

---
 apps/m0_lowload/CMakeLists.txt    |   2 +-
 apps/m0_lowload/src/main.c        |   5 ++
 apps/m0_lowload/src/usb_hc_init.c | 133 +-----------------------------
 3 files changed, 7 insertions(+), 133 deletions(-)

diff --git a/apps/m0_lowload/CMakeLists.txt b/apps/m0_lowload/CMakeLists.txt
index 90d9ba2..0e36581 100644
--- a/apps/m0_lowload/CMakeLists.txt
+++ b/apps/m0_lowload/CMakeLists.txt
@@ -16,6 +16,6 @@ endif()
 include(${SDK_PATH}/cmake/bflbsdk.cmake)
 
 target_compile_options(app PRIVATE -ggdb -Os)
-target_sources(app PRIVATE src/usb_dc_init.c)
+target_sources(app PRIVATE src/usb_dc_init.c src/usb_hc_init.c)
 sdk_set_main_file(src/main.c)
 project(m0_lowload)
diff --git a/apps/m0_lowload/src/main.c b/apps/m0_lowload/src/main.c
index 80ce017..1ca44b0 100755
--- a/apps/m0_lowload/src/main.c
+++ b/apps/m0_lowload/src/main.c
@@ -30,12 +30,17 @@
 #define DBG_TAG "MAIN"
 #include <log.h>
 
+extern void usb_hc_low_level_init(void);
 extern int usb_dc_init(void);
 
 int main(void)
 {
     board_init();
+#if 1
+    usb_hc_low_level_init();
+#else
     usb_dc_init();
+#endif
     
     LOG_I("Starting Mailbox Handlers\r\n");
 
diff --git a/apps/m0_lowload/src/usb_hc_init.c b/apps/m0_lowload/src/usb_hc_init.c
index 79158ab..88a85e2 100644
--- a/apps/m0_lowload/src/usb_hc_init.c
+++ b/apps/m0_lowload/src/usb_hc_init.c
@@ -149,141 +149,10 @@ void usb_hc_low_level_init(void)
     regval |= USB_A_BUS_REQ_HOV;
     putreg32(regval, BLFB_USB_BASE + USB_OTG_CSR_OFFSET);
 
-    regval = getreg32(BLFB_USB_BASE + USB_GLB_FEATURE_OFFSET);
-    regval &= ~USB_DEV_ONLY;
-    regval |= USB_HOST_ONLY;
-    putreg32(regval, BLFB_USB_BASE + USB_GLB_FEATURE_OFFSET);
-
-    regval = getreg32(BLFB_USB_BASE + USB_GLB_ISR_OFFSET);
-    regval &= ~USB_DEV_INT;
-    regval &= ~USB_OTG_INT;
-    regval |= USB_HC_INT;
-    putreg32(regval, BLFB_USB_BASE + USB_GLB_ISR_OFFSET);
-
     regval = getreg32(BLFB_USB_BASE + USB_GLB_INT_OFFSET);
     regval &= ~USB_MDEV_INT;
-    regval &= ~USB_MOTG_INT;
+    regval |= USB_MOTG_INT;
     regval |= USB_MHC_INT;
     putreg32(regval, BLFB_USB_BASE + USB_GLB_INT_OFFSET);
 }
 
-int usb_dc_init(void)
-{
-    uint32_t regval;
-
-    bflb_usb_phy_init();
-
-    bflb_irq_attach(37, USBD_IRQHandler, NULL);
-    bflb_irq_enable(37);
-
-    /* disable global irq */
-    regval = getreg32(BLFB_USB_BASE + USB_DEV_CTL_OFFSET);
-    regval &= ~USB_GLINT_EN_HOV;
-    putreg32(regval, BLFB_USB_BASE + USB_DEV_CTL_OFFSET);
-
-    regval = getreg32(BLFB_USB_BASE + USB_PHY_TST_OFFSET);
-    regval |= USB_UNPLUG;
-    putreg32(regval, BLFB_USB_BASE + USB_PHY_TST_OFFSET);
-
-    regval = getreg32(BLFB_USB_BASE + USB_DEV_CTL_OFFSET);
-    regval &= ~USB_CAP_RMWAKUP;
-    regval |= USB_CHIP_EN_HOV;
-    putreg32(regval, BLFB_USB_BASE + USB_DEV_CTL_OFFSET);
-
-    regval = getreg32(BLFB_USB_BASE + USB_DEV_CTL_OFFSET);
-    regval |= USB_SFRST_HOV;
-    putreg32(regval, BLFB_USB_BASE + USB_DEV_CTL_OFFSET);
-
-    while (getreg32(BLFB_USB_BASE + USB_DEV_CTL_OFFSET) & USB_SFRST_HOV) {
-    }
-
-    regval = getreg32(BLFB_USB_BASE + USB_DEV_ADR_OFFSET);
-    regval &= ~USB_AFT_CONF;
-    putreg32(regval, BLFB_USB_BASE + USB_DEV_ADR_OFFSET);
-
-    regval = getreg32(BLFB_USB_BASE + USB_DEV_SMT_OFFSET);
-    regval &= ~USB_SOFMT_MASK;
-#ifdef CONFIG_USB_HS
-    regval |= USB_SOF_TIMER_MASK_AFTER_RESET_HS;
-#else
-    regval |= USB_SOF_TIMER_MASK_AFTER_RESET_FS;
-#endif
-    putreg32(regval, BLFB_USB_BASE + USB_DEV_SMT_OFFSET);
-
-    /* enable setup irq in source group0 */
-    regval = getreg32(BLFB_USB_BASE + USB_DEV_MISG0_OFFSET);
-    regval &= ~USB_MCX_SETUP_INT;
-    regval |= USB_MCX_IN_INT;
-    regval |= (1 << 3);
-    regval |= USB_MCX_OUT_INT;
-    regval |= USB_MCX_IN_INT;
-    regval |= USB_MCX_COMFAIL_INT;
-    regval |= USB_MCX_COMABORT_INT;
-    putreg32(regval, BLFB_USB_BASE + USB_DEV_MISG0_OFFSET);
-
-    /* disable all fifo irq in source group1 */
-    putreg32(0xffffffff, BLFB_USB_BASE + USB_DEV_MISG1_OFFSET);
-
-    /* enable rst/tx0/rx0 irq in source group2 */
-    regval = 0xffffffff;
-    regval &= ~USB_MUSBRST_INT;
-    regval &= ~USB_MSUSP_INT;
-    regval &= ~USB_MRESM_INT;
-    regval &= ~USB_MTX0BYTE_INT;
-    regval &= ~USB_MRX0BYTE_INT;
-    putreg32(regval, BLFB_USB_BASE + USB_DEV_MISG2_OFFSET);
-
-    /* enable vdma cmplt and error irq in source group3 */
-    regval = 0xffffffff;
-    regval &= ~(USB_MVDMA_CMPLT_CXF |
-                USB_MVDMA_CMPLT_F0 |
-                USB_MVDMA_CMPLT_F1 |
-                USB_MVDMA_CMPLT_F2 |
-                USB_MVDMA_CMPLT_F3);
-    // regval &= ~(USB_MVDMA_ERROR_CXF |
-    //             USB_MVDMA_ERROR_F0 |
-    //             USB_MVDMA_ERROR_F1 |
-    //             USB_MVDMA_ERROR_F2 |
-    //             USB_MVDMA_ERROR_F3);
-    putreg32(regval, BLFB_USB_BASE + USB_DEV_MISG3_OFFSET);
-
-    /* enable group irq */
-    regval = getreg32(BLFB_USB_BASE + USB_DEV_MIGR_OFFSET);
-    regval &= ~USB_MINT_G0;
-    regval &= ~USB_MINT_G1;
-    regval &= ~USB_MINT_G2;
-    regval &= ~USB_MINT_G3;
-    regval &= ~USB_MINT_G4;
-    putreg32(regval, BLFB_USB_BASE + USB_DEV_MIGR_OFFSET);
-
-    /* enable device irq */
-    regval = getreg32(BLFB_USB_BASE + USB_GLB_INT_OFFSET);
-    regval |= USB_MHC_INT;
-    regval |= USB_MOTG_INT;
-    regval &= ~USB_MDEV_INT;
-    putreg32(regval, BLFB_USB_BASE + USB_GLB_INT_OFFSET);
-
-    bflb_usb_source_group_int_clear(2, 0x3ff);
-    bflb_usb_source_group_int_clear(3, 0xffffffff);
-
-    for (uint8_t i = 1; i < 9; i++) {
-        bflb_usb_set_ep_fifomap(i, 15);
-        bflb_usb_set_fifo_epmap(i, 15, 0);
-    }
-
-    /* enable vdma */
-    regval = getreg32(BLFB_USB_BASE + USB_VDMA_CTRL_OFFSET);
-    regval |= USB_VDMA_EN;
-    putreg32(regval, BLFB_USB_BASE + USB_VDMA_CTRL_OFFSET);
-
-    regval = getreg32(BLFB_USB_BASE + USB_PHY_TST_OFFSET);
-    regval &= ~USB_UNPLUG;
-    putreg32(regval, BLFB_USB_BASE + USB_PHY_TST_OFFSET);
-
-    /* enable global irq */
-    regval = getreg32(BLFB_USB_BASE + USB_DEV_CTL_OFFSET);
-    regval |= USB_GLINT_EN_HOV;
-    putreg32(regval, BLFB_USB_BASE + USB_DEV_CTL_OFFSET);
-
-    return 0;
-}
-- 
2.34.1

